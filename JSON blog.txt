              JSON LOOPS (for, for in, for of, for each)

JSON (JavaScript Object Notation) is a lightweight data interchange format that is easy for humans to read and write, 
and easy for machines to parse and generate. 
It is based on a subset of the JavaScript Programming Language, Standard ECMA-262 3rd Edition - December 1999. 
JSON is a text format that is completely language independent but uses conventions that are familiar to programmers of the C-family of languages,
including C, C++, C#, Java, JavaScript, Perl, Python, and many others.



JSON (JavaScript Object Notation) is a lightweight data interchange format that is widely used for data exchange between the client and the server. 
JSON is a text-based format, and its data structure is similar to that of a JavaScript object, 
making it easy to work with in JavaScript.



When working with JSON data, it's common to need to loop through its elements to access the values within.
There are several different ways to accomplish this in JavaScript, 
including for, for-in, for-of, and forEach loops.
In this blog, we will discuss each of these looping constructs in detail and provide examples to demonstrate their usage



For Loop:
The for loop is a traditional looping construct in JavaScript and many other programming languages. 
It's used to execute a block of code a specified number of times. 
The basic syntax of a for loop is as follows:

                           
                           EXAMPLE
Formate

for (initialization; condition; increment/decrement) {
  // code to be executed
}
 for (i=1; i<=n.length; i++){
 console.log(i);
 }


Here, the initialization section sets a starting value for the loop counter. 
The condition section determines whether the loop should continue or terminate. 
Finally, the increment/decrement section updates the loop counter after each iteration of the loop.
